

【題名】これで私も君もアクセラビリティーマンになれるかも？（WAI-AREAについて）


# WAI-AREAについて

WAI-AREAってなんですか？

* アクセシビリティ関連の技術
* セマンティクスを補強する


## WAI-AREAが気になった理由

正直なところ、状態のroleとかあって、js, cssのセレクタと親和性が高いらしい！
→やってみたーい！

でも待てよ。
もう少しわかった上で手をつけてみた方が良さそうだよなぁ…

と、いうわけで下記２点を知った上で何か作って見ようと思います。



## 1. ライブリージョンってなんだろう？





## 2. WAI-AREAがどのようにしてブラウザに解釈されるのかがとても気になります…

そもそも、ブラウザが画面を描画するまでのステップってあんまり意識したことが今までなかった。
とはいえ、あんまり詳しく書くと本題からそれてしまうので、大まかに。

* html構造から、DOMツリーを生成する。
  * DOM生成中にcssの読み込みが発生する。このタイミングで CSSOMツリーの生成も発生する。
* 上記２つの生成が完了
* DOMツリーと、CSSOMツリーのを組み合わせてレンダリングツリーを作る
  * DOMツリーのルートから処理していく。この時スタイルでdisplay:none;されている要素は処理から除外
  * DOMツリーのノードを処理するたびに、当てはまるCSSOMルールを適用させる
  * 全部終わったら出力。これがレンダリングツリー
* レイアウト処理を行う
  * レンダリングツリーのルートからノードの大きさの解釈をしていく。
* 描画する（ペインティング・ラスタライジングともいう）
  * 画面の大きさから、レンダリングツリーの大きさをピクセル変換する。
* 描画に至る。

* アクセシビリティツリーは、レンダリングツリーにARIAなどが反映されて計算される。





今すぐ使えるアクセシビリティチェックツール13選！
https://www.mitsue.co.jp/knowledge/blog/frontend/201707/26_1549.html


-----------------------  
  
時間に収まりきらなかったのは残念。 しかし、WAI-AREAはいつかやりたいと思っていたマークアップだったので、話を聞くことができてよかった。 興味深いと思ったのはMicrodataは検索エンジン用と考えていいようだ。 WAI-AREAはアクセシビリティが良くする（アクセスしやすくなる）ためのもの。
深堀していくと、アクセシビリティAPIとかの話になってくる。 使うときには、ここまで理解したうえで使いたいと思った。
自分が本気でHTMLを勉強を始めた時にかった参考書の執筆者の１人が株式会社まぼろしの人だった。 執筆者とは違う人だけど、登壇者は執筆者のことを知ってるんだろうなぁ。と、少し感動。

